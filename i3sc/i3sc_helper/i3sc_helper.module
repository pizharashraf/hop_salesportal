<?php
//for library functions


/**************************  Get child term id related to argument terms  **************************/
function get_child_term_tid($term_id) {
  $sql_main_term = db_result(db_query("SELECT td.tid from {term_hierarchy} th INNER JOIN {term_data} td ON th.tid = td.tid WHERE th.parent = '".$term_id."' LIMIT 1"));
  return $sql_main_term;
}
/**************************  Get child term name related to argument terms  **************************/
function get_child_term_name($term_id) {

	$sql_main_term = db_query("SELECT th.parent,td.name,td.tid from {term_hierarchy} th INNER JOIN {term_data} td ON th.tid = td.tid WHERE th.parent = '".$term_id."' ");
	$ch_arr = array();
	while($main_term = db_fetch_array($sql_main_term)) { 
		$ch_arr[] = $main_term;
	}
  return $ch_arr;
}
/**************************  Get term name related to argument terms  **************************/
function get_only_term_name($term_id) {
  $subject_name = db_result(db_query("SELECT name from {term_data}  WHERE tid = '%d' ", $term_id ));
  return $subject_name;

}
/**************************  Get term description related to argument terms  **************************/
function get_only_term_description($term_id) {
  $term_description = db_result(db_query("SELECT description from {term_data}  WHERE tid = '%d' ", $term_id ));
  return $term_description;
}
/**************************  Get parent name related to argument terms  **************************/
function get_parent_name_by_tid($term_id) {
  $parent_name = db_result(db_query("SELECT td.name  from {term_hierarchy} th INNER JOIN {term_data} td on th.parent = td.tid WHERE th.tid = '%d' ", $term_id ));
  return $parent_name;
}
/**************************  Get parent tid related to argument terms  **************************/
function get_parent_tid_by_tid($term_id) {
  $parent_name = db_result(db_query("SELECT td.tid  from {term_hierarchy} th INNER JOIN {term_data} td on th.parent = td.tid WHERE th.tid = '%d' ", $term_id ));
  return $parent_name;
}
/**************************  Get tid related to node id  **************************/
function get_term_id_using_nid($nid) {
	$node_type = db_result(db_query("SELECT type from {node} WHERE nid = '%d' ", $nid ));
	if($node_type == 'read') {
		$tid = db_result(db_query("SELECT cts.field_section_value from {content_field_gr_read} cfgr INNER JOIN {content_type_submitted} cts on cfgr.nid = cts.nid WHERE cfgr.field_gr_read_nid = '%d' ", $nid ));
	}
	if($node_type == 'interect') {
		$tid = db_result(db_query("SELECT cts.field_section_value from {content_field_gr_interect} cfgr INNER JOIN {content_type_submitted} cts on cfgr.nid = cts.nid WHERE cfgr.field_gr_interect_nid = '%d' ", $nid ));
	}
	if($node_type == 'demonstrate') {
		$tid = db_result(db_query("SELECT cts.field_section_value from {content_field_gr_demonstrate} cfgr INNER JOIN {content_type_submitted} cts on cfgr.nid = cts.nid WHERE cfgr.field_gr_demonstrate_nid = '%d' ", $nid ));
	}
	if($node_type == 'extend') {
		$tid = db_result(db_query("SELECT cts.field_section_value from {content_field_gr_extend} cfgr INNER JOIN {content_type_submitted} cts on cfgr.nid = cts.nid WHERE cfgr.field_gr_extend_nid = '%d' ", $nid ));
	}
  
  return $tid;
}

/**************************  Get any level parent tid related to term id  **************************/
function chech_nterm_level($term_id) {
	$rs_parent = db_result(db_query("SELECT th.parent from {term_hierarchy} th INNER JOIN {term_data} td ON th.tid = td.tid WHERE td.tid = '%d' ", $term_id ));
  while($n_level!=0){
	  $n_level = chech_nterm_level($rs_parent);
	}
	return $n_level;
}
/**************************  Get taxonomy image path related to term id  **************************/

function get_taxonomy_image_path($term_id) {
  	$rs_taxonomy_path = db_result(db_query("SELECT path from {term_image} WHERE tid = '%d' ", $term_id ));
  	return $rs_taxonomy_path;
}
/**************************  Get parent id related to term id  **************************/
function custom_block_visibility($term_id) {
	$rs_parent = db_result(db_query("SELECT th.parent from {term_hierarchy} th INNER JOIN {term_data} td ON th.tid = td.tid WHERE td.tid = '%d' ", $term_id ));
	return $rs_parent;
}
/**************************  Get any level parent tid related to term id  **************************/
function check_any_level_children($term_id) {
  $rs_parent = db_result(db_query("SELECT th.parent from {term_hierarchy} th INNER JOIN {term_data} td ON th.tid = td.tid WHERE td.tid = '%d' ", $term_id ));
  return $rs_parent;
}
/**************************  Get first level parent tid related to term id  **************************/
function check_first_level_children($parent_visibility) {
  $P_rs_parent = db_result(db_query("SELECT th.parent from {term_hierarchy} th INNER JOIN {term_data} td ON th.tid = td.tid WHERE td.tid = '%d' ", $parent_visibility ));
  return $P_rs_parent;
}
/**************************  Get second level parent tid related to term id  **************************/
function check_second_level_children($P_rs_parent) {
  $pp_rs_parent = db_result(db_query("SELECT th.parent from {term_hierarchy} th INNER JOIN {term_data} td ON th.tid = td.tid WHERE td.tid = '%d' ", $P_rs_parent ));
  return $pp_rs_parent;
}
  /**************************  Get third level parent tid related to term id  **************************/
function check_third_level_children($pp_rs_parent) {
  $ss_pp_rs_parent = db_result(db_query("SELECT th.parent from {term_hierarchy} th INNER JOIN {term_data} td ON th.tid = td.tid WHERE td.tid = '%d' ", $pp_rs_parent ));
  return $ss_pp_rs_parent;
}
  /**************************  Get further children related to term id  **************************/
function check_further_children($tid) {
/*
217...this id is not parent of any other id.....term......if exist show all sections
count total number of tid where parent=217.......
if count comes to be zero........returns
*/
  $rs_parent = db_result(db_query("SELECT count(tid) as tidcount from {term_hierarchy} WHERE parent = '%d' ", $tid ));
  return $rs_parent;
}
/**************************  Get main node info related to term id  **************************/
function get_submitted_record_section_using_tid($term_id){
  $rs_nid = db_result(db_query("SELECT nid from {content_type_submitted} WHERE field_section_value = '%d' ", $term_id ));
  $rs_submitted = db_fetch_object(db_query("SELECT nn.title, nr.body from {node} nn LEFT JOIN {node_revisions} nr ON nn.nid = nr.nid WHERE nn.nid = '%d' ", $rs_nid ));
  return $rs_submitted;

}
/**************************  Get READ node info related to term id  **************************/
//ctr.field_video_fid,ctr.field_pdf_fid,
function get_all_read_section_using_tid($term_id){
$read_arr = array();
$sql_read = db_query("SELECT DISTINCT(node.nid) AS nid,
   node.title AS node_title,
   node_data_field_section.nid as submitnid,
   ff.filepath, ff.filename,
   node_revisions.body AS node_revisions_body,
   node_revisions.format AS node_revisions_format,
   ctr.field_read_categorytype_value,
   
   ctr.field_read_image_field_fid,
   
   ctr.field_misc_video_path_value,
   ctr.field_read_thumbnail_fid,
   node.type AS node_type,
   node.vid AS node_vid
   
 FROM {node} node 

 LEFT JOIN  {content_field_gr_read} ctge ON ctge.field_gr_read_nid =  node.nid
 LEFT JOIN {node_revisions} node_revisions ON node.vid = node_revisions.vid
 LEFT JOIN {content_type_read} ctr ON node.vid = ctr.vid
  LEFT JOIN {files} ff ON ff.fid = ctr.field_read_image_field_fid
 
  LEFT JOIN {content_type_submitted} node_data_field_section ON node_data_field_section.nid = ctge.nid
 WHERE (node.type in ('read')) AND (node_data_field_section.field_section_value = '".$term_id."')" );
 
 while ($rs_read = db_fetch_array($sql_read)) {
   $read_arr[] = $rs_read; 
 }
  return $read_arr;
}

function get_all_sections_files_by_fid($fid) {
  $files_path = db_fetch_array(db_query("SELECT filepath, filename from {files} WHERE fid = '%d' ", $fid ));
  return $files_path;
}

function get_sections_files_by_fid($fid) {
  $files_path = db_result(db_query("SELECT filepath, filename from {files} WHERE fid = '%d' ", $fid ));
  return $files_path;
}
/**************************  Get INTERECT node info related to term id  **************************/
//   node_data_field_ext_image.field_intr_video_fid,node_data_field_ext_image.field_intr_pdf_fid,
function get_all_interect_section_using_tid($term_id){
$interect_arr = array();
$sql_interect = db_query("SELECT DISTINCT(node.nid) AS nid,
   node.title AS node_title,
   node_data_field_section.nid as submitnid,
   ff.filepath,
   node_revisions.body AS node_revisions_body,
   node_revisions.format AS node_revisions_format,
   node_data_field_ext_image.field_in_categorytype_value as file_category_type,
   

   node_data_field_ext_image.field_in_image_fid,
   node_data_field_ext_image.field_intr_thumbnail_fid,
   node_data_field_ext_image.field_misc_intr_video_path_value,
  
   node.type AS node_type,
   node.vid AS node_vid
   
 FROM {node} node 

 LEFT JOIN  {content_field_gr_interect} ctge ON ctge.field_gr_interect_nid =  node.nid
 LEFT JOIN {node_revisions} node_revisions ON node.vid = node_revisions.vid
 LEFT JOIN {content_type_interect} node_data_field_ext_image ON node.vid = node_data_field_ext_image.vid
  LEFT JOIN {files} ff ON ff.fid = node_data_field_ext_image.field_in_image_fid
 
  LEFT JOIN {content_type_submitted} node_data_field_section ON node_data_field_section.nid = ctge.nid
 WHERE (node.type in ('interect')) AND (node_data_field_section.field_section_value = '".$term_id."')" );
 
 while ($rs_interect = db_fetch_array($sql_interect)) {
   $interect_arr[] = $rs_interect; 
 }
  return $interect_arr;
}
/**************************  Get DEMONSTRATE node info related to term id  **************************/
//   node_data_field_ext_image.field_demns_video_fid,node_data_field_ext_image.field_demns_pdf_fid,
function get_all_demonstrate_section_using_tid($term_id){
$demons_arr = array();
$sql_demons = db_query("SELECT DISTINCT(node.nid) AS nid,
   node.title AS node_title,
   node_data_field_section.nid as submitnid,
   ff.filepath,
   node_revisions.body AS node_revisions_body,
   node_revisions.format AS node_revisions_format,
   node_data_field_ext_image.field_demns_categorytype_value as file_category_type,

   node_data_field_ext_image.field_demns_image_fid,
   node_data_field_ext_image.field_demns_thumbnail_fid,

   node_data_field_ext_image.field_misc_demns_video_path_value,
   
   node.type AS node_type,
   node.vid AS node_vid
   
 FROM {node} node 

 LEFT JOIN  {content_field_gr_demonstrate} ctge ON ctge.field_gr_demonstrate_nid =  node.nid
 LEFT JOIN {node_revisions} node_revisions ON node.vid = node_revisions.vid
 LEFT JOIN {content_type_demonstrate} node_data_field_ext_image ON node.vid = node_data_field_ext_image.vid
  LEFT JOIN {files} ff ON ff.fid = node_data_field_ext_image.field_demns_image_fid
 
  LEFT JOIN {content_type_submitted} node_data_field_section ON node_data_field_section.nid = ctge.nid
 WHERE (node.type in ('demonstrate')) AND (node_data_field_section.field_section_value = '".$term_id."')" );
 
 while ($rs_demons = db_fetch_array($sql_demons)) {
   $demons_arr[] = $rs_demons; 
 }
  return $demons_arr;
}


/**************************  Get EXTEND node info related to term id  **************************/
//   node_data_field_ext_image.field_ext_video_fid,node_data_field_ext_image.field_ext_pdf_fid,
function get_all_extend_section_using_tid($term_id){
	$extend_arr = array();
	$sql_extend = db_query("SELECT DISTINCT(node.nid) AS nid,
   node.title AS node_title,
   node_data_field_section.nid as submitnid,
   ff.filepath,
   node_revisions.body AS node_revisions_body,
   node_revisions.format AS node_revisions_format,

   node_data_field_ext_image.field_ext_image_fid,
   node_data_field_ext_image.field_ext_thumbnail_fid,

   node_data_field_ext_image.field_misc_extnd_video_path_value,
   
   node.type AS node_type,
   node.vid AS node_vid,
   node_data_field_ext_image.field_ext_categorytype_value AS node_data_field_ext_image_field_ext_categorytype_value
 FROM node node 

 LEFT JOIN  content_field_gr_extend ctge ON ctge.field_gr_extend_nid =  node.nid
 LEFT JOIN node_revisions node_revisions ON node.vid = node_revisions.vid
 LEFT JOIN content_type_extend node_data_field_ext_image ON node.vid = node_data_field_ext_image.vid
  LEFT JOIN files ff ON ff.fid = node_data_field_ext_image.field_ext_image_fid
 
  LEFT JOIN content_type_submitted node_data_field_section ON node_data_field_section.nid = ctge.nid
 WHERE (node.type in ('extend')) AND (node_data_field_section.field_section_value = '".$term_id."')" );
 
 while ($rs_extend = db_fetch_array($sql_extend)) {
   $extend_arr[] = $rs_extend; 
 }
  return $extend_arr;
}

function get_only_file_extn($filename) {
    $pdf_exp = explode(".", $file_name);
    if ($pdf_exp[1] == 'mp4' || $pdf_exp[1] == 'avi' || $pdf_exp[1] == 'swf' || $pdf_exp[1] == 'flv') {
      return true;
    } else if ($pdf_exp[1] == 'pdf' || $pdf_exp[1] == 'doc' || $pdf_exp[1] == 'xls' || $pdf_exp[1] == 'jpg' || $pdf_exp[1] == 'jpeg') {
      return false;
    }
}


function getfile_extension_and_display($filename = "", $tempfilepath = "") {
  global $base_url;
  $path_theme = $base_url.'/'.path_to_theme();
  $i3sc_no_image_avail = $path_theme.'/images/i3sc_no_image_avail.jpg';
  $i3sc_pdf_icon = $path_theme.'/images/i3sc_pdf_icon.jpg';
  $i3sc_word = $path_theme.'/images/i3sc_word.gif';
  $i3sc_xls_file = $path_theme.'/images/i3sc_xls_file.png';
  $i3sc_ppt_file = $path_theme.'/images/i3sc_ppt.gif';
  
  $i3sc_video_file = $path_theme.'/images/video.jpg';
  
  if(empty($filename)) {
    $file_path = $i3sc_no_image_avail;
  }else{
				$pdf_exp = explode(".", $filename);                	
				
			if ($pdf_exp[1] == 'pdf') {
					$file_path = $i3sc_pdf_icon;
			}else if ($pdf_exp[1] == 'doc') {
					$file_path = $i3sc_word;
			} else if ($pdf_exp[1] == 'xls') {
					$file_path = $i3sc_xls_file;
			}else if ($pdf_exp[1] == 'ppt') {
					$file_path = $i3sc_ppt_file;
			} else if ($pdf_exp[1] == 'mp4' || $pdf_exp[1] == 'avi' || $pdf_exp[1] == 'swf' || $pdf_exp[1] == 'flv' || $pdf_exp[1] == 'mp3' || $pdf_exp[1] == 'wmv') {
					$file_path = $i3sc_video_file;
			} else {
					$file_path = $tempfilepath;
			}
	}
	
	return $file_path;
}
//not in use
function get_files_priority($x, $y, $z) {
/*
if all not empty.....................1...........m
if 3 empty and 1 not empty...........4   xyz yzm zmx mxy........m x y z
if 2 empty and 2 not empty     xy xz xm yz ym zm ..........yz ym yz xm xz xy    
if 1 empty and 3 not empty     

case x
case y 
case y
case m
*/

  if(!empty($x) && empty($y) && empty($z)){
    $rs_file = $x;
  }
  if(!empty($y) && empty($x) && empty($z)){
    $rs_file = $y;
  }
  if(!empty($z) && empty($x) && empty($y)){
    $rs_file = $z;
  }
  
  if(!empty($x) && !empty($y) && empty($z)){
    $rs_file = $x;
  }
  if(!empty($y) && !empty($z) && empty($x)){
    $rs_file = $y;
  }
  if(!empty($x) && !empty($z) && empty($y)){
    $rs_file = $x;
  }
  
  if(!empty($x) && !empty($y) && !empty($z)){
    $rs_file = $x;
  }
  
  return $rs_file;

}



//function to highlight main menu tabs using term ID

function get_section_id_for_highlighted_tabs_using_termid($term_id) {

    $parent_visibility = check_any_level_children($term_id);
    $P_rs_parent = check_any_level_children($parent_visibility);
    $pp_rs_parent = check_any_level_children($P_rs_parent);
   $ss_pp_rs_parent = check_any_level_children($pp_rs_parent);////not zero
    $my_ss_pp_rs_parent = check_any_level_children($ss_pp_rs_parent);
   $ls_my_ss_pp_rs_parent = check_any_level_children($my_ss_pp_rs_parent);

    
    if($parent_visibility == 0){
      $name = get_only_term_name($term_id);
    }else if($P_rs_parent == 0) {
            $name = get_only_term_name($parent_visibility);
    }else if($pp_rs_parent == 0) {
            $name = get_only_term_name($P_rs_parent);
    }else if($my_ss_pp_rs_parent == 0) {
            $name = get_only_term_name($ss_pp_rs_parent);
    }else if($ls_my_ss_pp_rs_parent == 0) {
            $name = get_only_term_name($my_ss_pp_rs_parent);
    }
    //print $name;
    return $name;
 }
 

 //function to highlight main menu tabs using node ID
 
function get_section_id_for_highlighted_tabs_using_node_id($node_id) {

  $node_type  = db_result(db_query("SELECT type from {node} WHERE nid = '%d' ", $node_id ));
  
  if($node_type == 'read') {
    $sub_node_id  = db_result(db_query("SELECT nid from {content_field_gr_read} WHERE field_gr_read_nid = '%d' ", $node_id ));
  }else if($node_type == 'interect') {
    $sub_node_id  = db_result(db_query("SELECT nid from {content_field_gr_interect} WHERE field_gr_interect_nid = '%d' ", $node_id ));
  }else if($node_type == 'demonstrate') {
    $sub_node_id  = db_result(db_query("SELECT nid from {content_field_gr_demonstrate} WHERE field_gr_demonstrate_nid = '%d' ", $node_id ));
  }else if($node_type == 'extend') {
    $sub_node_id  = db_result(db_query("SELECT nid from {content_field_gr_extend} WHERE field_gr_extend_nid = '%d' ", $node_id ));
  }
  
  $term_id  = db_result(db_query("SELECT field_section_value from {content_type_submitted} WHERE nid = '%d' ", $sub_node_id ));



    $parent_visibility = check_any_level_children($term_id);
    $P_rs_parent = check_any_level_children($parent_visibility);
    $pp_rs_parent = check_any_level_children($P_rs_parent);
   $ss_pp_rs_parent = check_any_level_children($pp_rs_parent);////not zero
    $my_ss_pp_rs_parent = check_any_level_children($ss_pp_rs_parent);
   $ls_my_ss_pp_rs_parent = check_any_level_children($my_ss_pp_rs_parent);

    
    if($parent_visibility == 0){
      $name = get_only_term_name($term_id);
    }else if($P_rs_parent == 0) {
            $name = get_only_term_name($parent_visibility);
    }else if($pp_rs_parent == 0) {
            $name = get_only_term_name($P_rs_parent);
    }else if($my_ss_pp_rs_parent == 0) {
            $name = get_only_term_name($ss_pp_rs_parent);
    }else if($ls_my_ss_pp_rs_parent == 0) {
            $name = get_only_term_name($my_ss_pp_rs_parent);
    }
    //print $name;
    return $name;
 }
 
 
//validate login form

function custom_form_alter(&$form, &$form_state, $form_id) {
	global $user;
	if ($form_id == 'user-login-form') {

  }
}

function custom_form_user_login_alter( &$form, $form_state )
{
    $form['#validate'] = array(  'user_login_name_validate', 'project_authentication_login_validate', 'user_login_final_validate' );
} 

function custom_login_validate( $form, &$form_state )
{
    $username = $form_state['values']['name'];
    $response = project_authentication_check_user($username, $form_state['values']['pass'] );
    if ($response != false)
    {
        user_external_login_register( $username, 'project_authentication' );
        $account = user_external_load($username);
      $form_state['uid'] = $account->uid;
    } // else drop through to the end and return nothing - Drupal will handle the rejection for us  
}





//**************************  ADD TO MY CONTENTS FUNCTIONALITY  **************************//

/**************************  start from node page  **************************/
function custom_add_to_my_favorite_content() {
      return $output = drupal_get_form('add_to_my_content_form');
}
function add_to_my_content_form() {
  global $user;
  global $base_url;
  $full_url = $base_url.$_SERVER["REQUEST_URI"];
  
  $form = array();
  
  $option_arr = array();
  $sql_folders = db_query("SELECT id,folder_name FROM {aa_i3sc_folder_manager} WHERE uid='".$user->uid."' AND status=1 ");
   while ($rs_folder = db_fetch_array($sql_folders)) {
     $option_arr[$rs_folder['id']] = $rs_folder['folder_name'];
  }


  $form['add_to_my_content'] = array(
    '#type' => 'select',
    '#title' => t('Add items to'),
    '#default_value' => 'My Content',
    '#options' => $option_arr,

  );
  $form['base_url_name'] = array(
    '#type' => 'hidden',
    '#title' => t(''),
    '#value' => $full_url,
  );

  $form['global_user_name'] = array(
    '#type' => 'hidden',
    '#title' => t(''),
    '#value' => $user->uid,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Add'),
  );
  return $form;
}
function add_to_my_content_form_validate($form, &$form_state) {

}
function add_to_my_content_form_submit($form, &$form_state) {
session_start();
global $base_url;
/*
add these values to session object and 
redirect to some other url 
where user have a choice to create a folder...
  if folder not created by user ......the content automatically goes to my content folder...
  ...after submitting user goes to manage my contents.

*/
   $node_nid = arg(1);
   $folder_id = $form_state['values']['add_to_my_content'];
   $data_url = $form_state['values']['base_url_name'];
   $user_id = $form_state['values']['global_user_name'];

	//$_SESSION['node_nid'] = $node_nid;
	//$_SESSION['folder_id'] = $folder_id;
	//$_SESSION['data_url'] = $data_url;
	//$_SESSION['user_id'] = $user_id;


//  db_query("INSERT INTO {aa_i3sc_folder_content} (`data_url`, `folder_id`, `uid`) VALUES ('node/56', '1', '')");
  drupal_goto($base_url.'/add_to_my_content/'.$folder_id.'/'.$node_nid);
  
  //After finish up unset the session object
  //unset($_SESSION['folder_id']);
  //unset($_SESSION['data_url']);
  //unset($_SESSION['user_id']);
  
}

/**************************  create a intermediate page menu  **************************/




