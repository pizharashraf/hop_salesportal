<?php
global $base_url;
global $imgsrc;
global $crossimgsrc;
global $notmandatoryimgsrc;

$imgsrc = $base_url.'/sites/all/themes/y2cfprod/images/OK.png';
$crossimgsrc = $base_url.'/sites/all/themes/y2cfprod/images/delete.png';
$notmandatoryimgsrc = $base_url.'/sites/all/themes/y2cfprod/images/alerts.png';



function hoppr_revalidation_perm() {
	return array('Administer revalidation csv Upload');
}

function hoppr_revalidation_menu() {
	$items = array();
	$items['hoppr/revalidation'] = array(
    'title' => 'Re-validation CSV Upload',
    'page callback' => 'hoppr_revalidationformerchant',
	'access arguments' => array('Administer revalidation csv Upload'),
    'description' => 'Administer revalidation csv Upload.',
    'weight' => -4,
	'type' => MENU_LOCAL_TASK,

	);
	return $items;
}
function hoppr_revalidation_form_alter(&$form, $form_state, $form_id) {
	global $base_url;
	global $imgsrc;
	global $crossimgsrc;
	global $notmandatoryimgsrc;
	global $user;
	if($form_id=='revalidation_csvupload_node_form') {
		
		$form['hoppr_rev'] = array(
				'#type' => 'item',
				'#weight' => -19,
				'#description' => '<div>Re-validation CSV file format.<span style="color:red;">(Please don&rsquo;t change a single spelling of header row in csv file) </span>
				<table border="1">
					<tr style="color:red;">
						<td>outlet_code</td>
						<td>validation_done_by</td>
						<td>validation_date</td>
						<td>validation_status</td>
						<td>validation_accep_with_changes</td>
						<td>validation_not_acc_atoutlet</td>
						<td>remarks</td>
						<td>validation_cng_upby_proteam</td>
						<td>pro_ops_rmks</td>
					</tr>
					<tr>
						<td>29488</td>
						<td>122</td>
						<td>12-23-2012</td>
						<td>Accepted</td>
						<td></td>
						<td></td>
						<td>Mail communication not received</td>
						<td></td>
						<td></td>
						</tr>
				
					<tr>
						<td>27858</td>
						<td>122</td>
						<td>12-23-2012</td>
						<td>Accepted with changes</td>
						<td>Lat-long updated</td>
						<td></td>
						<td>Mail communication not received</td>
						<td></td>
						<td></td>
					</tr>
				<table>
			</div>'
		);
		
		$form['myform'] = array(
				'#type' => 'item',
				'#weight' => -19,
				'#description' => '<div><span style="color:red;">Fields Mark with </span>(<span style="color:#FFAE00;">*</span>) <span style="color:red;"> is mandatory!</span></div>'
		);
		
		$form['path']['#access'] = FALSE;
		$form['menu']['#access'] = FALSE;
		$form['author']['#access'] = FALSE;
		$form['options']['#access'] = FALSE;
		$form['comment_settings']['#access'] = FALSE;
		$form['revision_information']['#access'] = FALSE;
		$form['title']['#access'] = FALSE;
		unset($form['buttons']['preview']);
	}
}
function hoppr_revalidation_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
	global $base_url;
	global $user;
//Merchants offers
	if ($node->type == 'revalidation_csvupload' && $op=='insert') {
    	if (!ini_get('safe_mode')) {
	   		set_time_limit(0);
		}
		ini_set('display_errors', 1);
    	//$path_module = drupal_get_path('module', 'hoppr_revalidation');
		$path_module = drupal_get_path('module', 'y2cf_offer_csvupload');
		require_once($path_module."/DataSource.php");
		require_once($path_module."/fileread.php");
    	$last_csv_upload_nid  = db_fetch_array(db_query("select max(nid) as nid from {node} where type='revalidation_csvupload' and uid='".$user->uid."'"));
    	$csv_file_name = db_fetch_array(db_query("select ff.filepath from {content_type_revalidation_csvupload} ctcu inner join {files} ff on ctcu.field_hoppr_csv_revalidation_fid = ff.fid where nid ='".$last_csv_upload_nid['nid']."' and uid='".$user->uid."' "));
		$path= $base_url.'/'.$csv_file_name['filepath'];

    	$csv = new File_CSV_DataSource;
		$csv->load($csv_file_name['filepath']);
		$data_array = $csv->connect();
    	$merchant_errors = array();
    	
    	//print_r($data_array);die;
    	
		foreach($data_array as $key => $offer_value) {
      		$merchant_code = $offer_value['outlet_code'];
			$mer_vid = db_result(db_query("select vid from {node} where nid='".$merchant_code."' "));
			$merchant_name = db_result(db_query("select title from {node} where nid='".$mer_vid."' "));
      		
			$validation_done_by = $offer_value['validation_done_by'];//field_hop_revalidation_val_by
			$val_date = $offer_value['validation_date'];
			$val_exp = explode("-", $val_date);
			$validation_date = mktime(0,0,0,$val_exp[0],$val_exp[1],$val_exp[2]);//date-- field_hop_revalidation_dis_dt
			$validation_status = $offer_value['validation_status'];//field_hop_revalidation
			$validation_accep_with_changes = $offer_value['validation_accep_with_changes'];
			$val_awc = explode(",", $validation_accep_with_changes);//array--field_hop_revalidation_awc
			
			
			$validation_not_acc_atoutlet = $offer_value['validation_not_acc_atoutlet'];
			$val_na = explode(",", $validation_not_acc_atoutlet);//array--field_hop_revalidation_onaao
			$remarks = $offer_value['remarks'];//field_hop_revalidation_remarks
			$validation_cng_upby_proteam = $offer_value['validation_cng_upby_proteam'];//field_hop_revalidation_cdbpotm
			$pro_ops_rmks = $offer_value['pro_ops_rmks'];//field_hop_revalidation_popdrmks
			
			//User role
			
			
			
      		$rs_rid  = get_user_role_id($user->uid);
//product ops for script entry
			if($rs_rid == 'y2cfmanager' || $rs_rid == 'operationhead' || $user->uid==1) {
				$sql_sts = "UPDATE {content_type_merchant_outlet} set field_hop_revalidation_val_by_value='".$validation_done_by."',field_hop_revalidation_dis_dt_value='".$validation_date."',field_hop_revalidation_value='".$validation_status."',field_hop_revalidation_remarks_value='".$remarks."',field_hop_revalidation_cdbpotm_value='".$validation_cng_upby_proteam."',field_hop_revalidation_popdrmks_value='".$pro_ops_rmks."' where vid='".$mer_vid."' ";
			    db_query($sql_sts);
			    
			    
			    //first check if data avail....dalete this nid-----and insert new with delta increment
			    // ACCEPTED WITH CHANGES
			    $ac_wc_hop = db_result(db_query("select vid from {content_field_hop_revalidation_awc} where vid = '".$mer_vid."' "));
			    if(!empty($ac_wc_hop)) {
			    	db_query("delete from {content_field_hop_revalidation_awc} where vid = '".$mer_vid."' ");
			    	if(count($val_awc) > 1) {
			    		$i=0;
			    		foreach($val_awc as $hopawc_hop) {
			    			db_query("INSERT into {content_field_hop_revalidation_awc} (vid, nid, delta, field_hop_revalidation_awc_value) values('".$mer_vid."', '".$merchant_code."', '".$i++."', '".$hopawc_hop."') ");
			    		}
			    	}else{
			    		db_query("INSERT into {content_field_hop_revalidation_awc} (vid, nid, delta, field_hop_revalidation_awc_value) values('".$mer_vid."', '".$merchant_code."', '".$i++."', '".$validation_accep_with_changes."') ");
			    	}
			    
			    }else{
			    	$i=0;
			    	$all_count_awc = count($hopawc_hop);
			    	if($all_count_awc > 1) {
			    		foreach($hopawc_hop as $hopawc_hop) {
			    			db_query("INSERT into {content_field_hop_revalidation_awc} (vid, nid, delta, field_hop_revalidation_awc_value) values('".$mer_vid."', '".$merchant_code."', '".$i++."', '".$hopawc_hop."') ");
			    		}
			    	}else{ 
			    
			    		db_query("INSERT into {content_field_hop_revalidation_awc} (vid, nid, delta, field_hop_revalidation_awc_value) values('".$mer_vid."', '".$merchant_code."', '0', '".$validation_accep_with_changes."') ");
			    	}
			    }
			    
			    
			    
			    
			    //NOT ACCEPTED
				$ac_wc = db_result(db_query("select vid from {content_field_hop_revalidation_onaao} where vid = '".$mer_vid."' "));
				if(!empty($ac_wc)) {
					db_query("delete from {content_field_hop_revalidation_onaao} where vid = '".$mer_vid."' ");
					if(count($val_na) > 1) {
						$i=0;
						foreach($val_na as $hopawc) {
							db_query("INSERT into {content_field_hop_revalidation_onaao} (vid, nid, delta, field_hop_revalidation_onaao_value) values('".$mer_vid."', '".$merchant_code."', '".$i++."', '".$hopawc."') ");
						}	
					}else{
						db_query("INSERT into {content_field_hop_revalidation_onaao} (vid, nid, delta, field_hop_revalidation_onaao_value) values('".$mer_vid."', '".$merchant_code."', '".$i++."', '".$validation_not_acc_atoutlet."') ");
					}
						
				}else{
					$i=0;
					$all_count = count($val_na);
					if($all_count > 1) { 
						foreach($val_na as $hopawc) {
							db_query("INSERT into {content_field_hop_revalidation_onaao} (vid, nid, delta, field_hop_revalidation_onaao_value) values('".$mer_vid."', '".$merchant_code."', '".$i++."', '".$hopawc."') ");
						}
					}else{ //print 'dddd';die;
						
						db_query("INSERT into {content_field_hop_revalidation_onaao} (vid, nid, delta, field_hop_revalidation_onaao_value) values('".$mer_vid."', '".$merchant_code."', '0', '".$validation_not_acc_atoutlet."') ");
					}
				}
				
				
			    
			    
			    $update_mer_scr = db_result(db_query("select title from {node} where vid='".$mer_vid."' "));
			    drupal_set_message("Script edited for the merchant &nbsp;&nbsp; -> &nbsp;&nbsp;".$update_mer_scr);
			}
		}
  		drupal_flush_all_caches();
		//Delete the file from the system
  		unlink($path);
	}
}

